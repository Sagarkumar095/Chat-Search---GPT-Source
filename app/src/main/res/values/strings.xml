<resources>
    <string name="app_name">Chat Search - GPT Source</string>
    <string name="enter_your_chat">Enter your chat</string>
    <string name="textview_browser_apis_are_built_into_your_web_browser_and_are_able_to_expose_data_from_the_surrounding_computer_environment_or_do_useful_complex_things_for_example_the_dom_document_object_model_api_allows_you_to_manipulate_html_and_css_creating_removing_and_changing_html_dynamically_applying_new_styles_to_your_page_etc_every_time_you_see_a_popup_window_appear_on_a_page_or_some_new_content_displayed_as_we_saw_above_in_our_simple_demo_for_example_that_s_the_dom_in_action_the_geolocation_api_retrieves_geographical_information_this_is_how_google_maps_is_able_to_find_your_location_and_plot_it_on_a_map_the_canvas_and_webgl_apis_allow_you_to_create_animated_2d_and_3d_graphics_people_are_doing_some_amazing_things_using_these_web_technologies_see_chrome_experiments_and_webglsamples_audio_and_video_apis_like_htmlmediaelement_and_webrtc_allow_you_to_do_really_interesting_things_with_multimedia_such_as_play_audio_and_video_right_in_a_web_page_or_grab_video_from_your_web_camera_and_display_it_on_someone_else_s_computer_try_our_simple_snapshot_demo_to_get_the_idea_note_many_of_the_above_demos_won_t_work_in_an_older_browser_when_experimenting_it_s_a_good_idea_to_use_a_modern_browser_like_firefox_chrome_edge_or_opera_to_run_your_code_in_you_will_need_to_consider_cross_browser_testing_in_more_detail_when_you_get_closer_to_delivering_production_code_i_e_real_code_that_real_customers_will_use_third_party_apis_are_not_built_into_the_browser_by_default_and_you_generally_have_to_grab_their_code_and_information_from_somewhere_on_the_web_for_example_the_twitter_api_allows_you_to_do_things_like_displaying_your_latest_tweets_on_your_website_the_google_maps_api_and_openstreetmap_api_allows_you_to_embed_custom_maps_into_your_website_and_other_such_functionality_note_these_apis_are_advanced_and_we_ll_not_be_covering_any_of_these_in_this_module_you_can_find_out_much_more_about_these_in_our_client_side_web_apis_module_there_s_a_lot_more_available_too_however_don_t_get_over_excited_just_yet_you_won_t_be_able_to_build_the_next_facebook_google_maps_or_instagram_after_studying_javascript_for_24_hours_there_are_a_lot_of_basics_to_cover_first_and_that_s_why_you_re_here_let_s_move_on_what_is_javascript_doing_on_your_page_here_we_ll_actually_start_looking_at_some_code_and_while_doing_so_explore_what_actually_happens_when_you_run_some_javascript_in_your_page_let_s_briefly_recap_the_story_of_what_happens_when_you_load_a_web_page_in_a_browser_first_talked_about_in_our_how_css_works_article_when_you_load_a_web_page_in_your_browser_you_are_running_your_code_the_html_css_and_javascript_inside_an_execution_environment_the_browser_tab_this_is_like_a_factory_that_takes_in_raw_materials_the_code_and_outputs_a_product_the_web_page">TextView Browser APIs are built into your web browser, and are able to expose data from the surrounding computer environment, or do useful complex things. For example: The DOM (Document Object Model) API allows you to manipulate HTML and CSS, creating, removing and changing HTML, dynamically applying new styles to your page, etc. Every time you see a popup window appear on a page, or some new content displayed (as we saw above in our simple demo) for example, that\'s the DOM in action. The Geolocation API retrieves geographical information. This is how Google Maps is able to find your location and plot it on a map. The Canvas and WebGL APIs allow you to create animated 2D and 3D graphics. People are doing some amazing things using these web technologies — see Chrome Experiments and webglsamples. Audio and Video APIs like HTMLMediaElement and WebRTC allow you to do really interesting things with multimedia, such as play audio and video right in a web page, or grab video from your web camera and display it on someone else\'s computer (try our simple Snapshot demo to get the idea). Note: Many of the above demos won\'t work in an older browser — when experimenting, it\'s a good idea to use a modern browser like Firefox, Chrome, Edge or Opera to run your code in. You will need to consider cross browser testing in more detail when you get closer to delivering production code (i.e. real code that real customers will use). Third party APIs are not built into the browser by default, and you generally have to grab their code and information from somewhere on the Web. For example: The Twitter API allows you to do things like displaying your latest tweets on your website. The Google Maps API and OpenStreetMap API allows you to embed custom maps into your website, and other such functionality. Note: These APIs are advanced, and we\'ll not be covering any of these in this module. You can find out much more about these in our Client-side web APIs module. There\'s a lot more available, too! However, don\'t get over excited just yet. You won\'t be able to build the next Facebook, Google Maps, or Instagram after studying JavaScript for 24 hours — there are a lot of basics to cover first. And that\'s why you\'re here — let\'s move on! What is JavaScript doing on your page? Here we\'ll actually start looking at some code, and while doing so, explore what actually happens when you run some JavaScript in your page. Let\'s briefly recap the story of what happens when you load a web page in a browser (first talked about in our How CSS works article). When you load a web page in your browser, you are running your code (the HTML, CSS, and JavaScript) inside an execution environment (the browser tab). This is like a factory that takes in raw materials (the code) and outputs a product (the web page).</string>
</resources>